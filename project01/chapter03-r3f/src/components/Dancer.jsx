/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/dancer.glb -o src/components/Dancer.jsx 
*/

import React, { useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { useEffect } from 'react';
import { useState } from 'react';

export function Dancer(props) {
  const group = useRef();
  const { nodes, materials, animations, scene } = useGLTF('/dancer.glb');
  const { actions } = useAnimations(animations, group);

  const [currentAnimation, setCurrentAnimation] = useState('wave');

  useEffect(() => {
    actions['wave'].play();
  }, [actions]);
  useEffect(() => {
    scene.traverse((obj) => {
      if (obj.isMesh) {
        obj.castShadow = true;
        obj.receiveShadow = true;
      }
    });
  }, [scene]);

  useEffect(() => {
    actions[currentAnimation].fadeIn(0.5).play();
    return () => {
      actions[currentAnimation].fadeOut(0.5).stop();
    };
  }, [actions, currentAnimation]);

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      scale={0.01}
      position-y={0.8}
      onClick={() => {
        setCurrentAnimation((prev) => {
          if (prev === 'wave') {
            return 'windmill';
          }
          return 'wave';
        });
      }}
    >
      <group name="AuxScene">
        <group position={[0, -82.942, -1.295]}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="Ch03"
            geometry={nodes.Ch03.geometry}
            material={materials.Ch03_Body}
            skeleton={nodes.Ch03.skeleton}
          >
            {/* <meshStandardMaterial /> */}
          </skinnedMesh>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/dancer.glb');
